..
.. Part 1
..
"input"@# n<> c<> =$g.
$g >kv ( ,_ >kv swap ( swap ,_ \, dip , )+ map ) mapf >M "O".= fltr.
$g (( i g c )=. ) fold ;>
  $i 1 0, - =$ii.
  $i0: $g $ii :/ "."= & ( ; $ii ( g i )= ;; ) \$g ?#
    $g "." $i :/= "O" $ii :/=
( "O".= fltr len ) map dup len a-I \* zip +/


..
.. Part 2
..
"input"@# n<> c<>.
( =$g ; tpose \_` map ) itr ;>
  $g >kv ( ,_ >kv swap ( swap ,_ \, dip , )+ map ) mapf >M "O".= fltr.
  $g (( i g c )=. ) fold
    $i 1 0, - =$ii.
    $i0: $g $ii :/ "."= & ( ; $ii ( g i )= ;; ) \$g ?#
      $g "." $i :/= "O" $ii :/=
4/` 0.:` map.
[]: =$$u.
dup >kv ( ,_ ( i x )=. ) find 1: ;>
  $$u $x :?` dup ( $$u $i $x := =$$u ) |#
$$u swap :` $$u len ( a b )=.
$b dp 1 9E $a - $b $a - % :`.
( "O".= fltr len ) map dup len a-I \* zip +/


#input ``
